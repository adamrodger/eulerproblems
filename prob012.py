"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

from utils import triangle, seive_of_eratosthenes
primes = seive_of_eratosthenes(10000)

def prime_factors(x):
    factors = {}
    
    for prime in primes:
        while x % prime == 0:
            if not prime in factors:
                factors[prime] = 0
            factors[prime] += 1
            x //= prime
            if x == 1:
                break
            
    return [(prime,factors[prime]) for prime in factors if factors[prime] > 0]

def factor_count(x):
    factors = prime_factors(x)
    
    if len(factors) == 0:
        return 2
    
    total = 1
    for prime,pow in factors:
        total *= pow + 1
        
    return total

if __name__ == "__main__":    
    for i in xrange(1,200000):
        num = triangle(i)
        #print "Num", num
        count = factor_count(num)
        #print num, ":", count
        if count > 500:
            print num
            break